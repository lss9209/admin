spring.profiles.active=local

# 개발할 때에만 create-drop 또는 update를 사용하고 운영 환경에서는 validate를 사용합니다.
spring.jpa.hibernate.ddl-auto=create-drop

# 개발시 SQL 로깅을 하여 어떤 값으로 어떤 SQL이 실행되는지 확인합니다.
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 톰캣 기본 요청 사이즈는 2MB 입니다. 그것보다 큰 요청을 받고 싶은 경우에 이 값을 조정해야 합니다.
# server.tomcat.max-http-form-post-size=5MB

# 웹 서버 호스트
app.host=http://localhost:8080

# HTML <FORM>에서 th:method에서 PUT 또는 DELETE를 사용해서 보내는 _method를 사용해서  @PutMapping과 @DeleteMapping으로 요청을 맵핑.
# spring.mvc.hiddenmethod.filter.enabled=true

spring.mail.host=mail.g2works.kr
spring.mail.port=587

# 본인 gmail 계정으로 바꾸세요.
spring.mail.username=cpcad@enuri.com

# 위에서 발급받은 App 패스워드로 바꾸세요.
spring.mail.password=Enuricpc1!
spring.mail.sender='ebad@enuri.com(ES Batch Report)'
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=false
